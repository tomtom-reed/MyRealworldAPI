/*
 * RealWorld Conduit API
 *
 * Conduit API documentation
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Collections.Generic;
using Microsoft.AspNetCore.Mvc;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using System.Text.Json;
using System.ComponentModel.DataAnnotations;
using RealworldApi.Web.Attributes;
using RealworldApi.Web.Security;
using Microsoft.AspNetCore.Authorization;
using RealworldApi.Web.Models;
using RealworldWeb.Caller;

namespace RealworldApi.Web.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class TagsApiController : ControllerBase
    {
        private readonly ITokenUtils tokenizer;
        public TagsApiController(ITokenUtils tokenizer)
        {
            this.tokenizer = tokenizer;
        }

        /// <summary>
        /// Get tags
        /// </summary>
        /// <remarks>Get tags. Auth not required</remarks>
        /// <response code="200">Tags</response>
        /// <response code="422">Unexpected error</response>
        [HttpGet]
        [Route("/api/tags")]
        [ValidateModelState]
        [SwaggerOperation("GetTags")]
        [SwaggerResponse(statusCode: 200, type: typeof(InlineResponse2005), description: "Tags")]
        [SwaggerResponse(statusCode: 422, type: typeof(GenericErrorModel), description: "Unexpected error")]
        public virtual IActionResult GetTags()
        { 
            
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(InlineResponse2005));

            //TODO: Uncomment the next line to return response 422 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(422, default(GenericErrorModel));
            string exampleJson = null;
            exampleJson = "{\n  \"tags\" : [ \"tags\", \"tags\" ]\n}";
            
                        var example = exampleJson != null
                        ? JsonSerializer.Deserialize<InlineResponse2005>(exampleJson)
                        : default(InlineResponse2005);            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
